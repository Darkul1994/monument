0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.4.28
3 info using node@v0.10.36
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /Users/designfrontier/.npm/3a52ce78-.lock
10 verbose tar pack [ '/Users/designfrontier/.npm/monument/1.2.0/package.tgz', '.' ]
11 verbose tarball /Users/designfrontier/.npm/monument/1.2.0/package.tgz
12 verbose folder .
13 info prepublish monument@1.2.0
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /Users/designfrontier/.npm/1f1177db-tar.lock
16 silly lockFile f3a0cada-r-npm-monument-1-2-0-package-tgz tar:///Users/designfrontier/.npm/monument/1.2.0/package.tgz
17 verbose lock tar:///Users/designfrontier/.npm/monument/1.2.0/package.tgz /Users/designfrontier/.npm/f3a0cada-r-npm-monument-1-2-0-package-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile f3a0cada-r-npm-monument-1-2-0-package-tgz tar:///Users/designfrontier/.npm/monument/1.2.0/package.tgz
21 silly lockFile f3a0cada-r-npm-monument-1-2-0-package-tgz tar:///Users/designfrontier/.npm/monument/1.2.0/package.tgz
22 silly lockFile a25be869-ntier-npm-monument-1-2-0-package /Users/designfrontier/.npm/monument/1.2.0/package
23 verbose lock /Users/designfrontier/.npm/monument/1.2.0/package /Users/designfrontier/.npm/a25be869-ntier-npm-monument-1-2-0-package.lock
24 silly lockFile a25be869-ntier-npm-monument-1-2-0-package /Users/designfrontier/.npm/monument/1.2.0/package
25 silly lockFile a25be869-ntier-npm-monument-1-2-0-package /Users/designfrontier/.npm/monument/1.2.0/package
26 silly lockFile 3a52ce78- .
27 silly lockFile 3a52ce78- .
28 silly publish { name: 'monument',
28 silly publish   version: '1.2.0',
28 silly publish   description: 'evented routing for nodejs for use on the server and in the client. Isomorphic!',
28 silly publish   main: 'app.js',
28 silly publish   scripts: { start: 'node app.js', test: 'gulp test' },
28 silly publish   repository:
28 silly publish    { type: 'git',
28 silly publish      url: 'https://github.com/designfrontier/monumentjs' },
28 silly publish   bugs: { url: 'https://github.com/designfrontier/monumentjs/issues' },
28 silly publish   author: { name: 'Daniel Sellers', email: 'daniel@designfrontier.net' },
28 silly publish   license: 'MIT',
28 silly publish   keywords:
28 silly publish    [ 'nodejs',
28 silly publish      'events',
28 silly publish      'routing',
28 silly publish      'isomorphic',
28 silly publish      'browser',
28 silly publish      'event',
28 silly publish      'eda' ],
28 silly publish   dependencies:
28 silly publish    { dot: '^1.0.3',
28 silly publish      'media-typer': '^0.3.0',
28 silly publish      mime: '^1.2.11',
28 silly publish      'raw-body': '^1.3.2' },
28 silly publish   devDependencies:
28 silly publish    { chai: '^1.10.0',
28 silly publish      chalk: '^0.5.1',
28 silly publish      gulp: '^3.8.10',
28 silly publish      'gulp-mocha': '^2.0.0',
28 silly publish      minimist: '^1.1.0' },
28 silly publish   contributors: [ { name: 'Daniel Sellers', email: 'daniel@designfrontier.net' } ],
28 silly publish   readme: '# monumentjs\n\n`monumentjs` is a super light event routed isomorphic nodejs framework. \n\n[![NPM](https://nodei.co/npm/monument.png)](https://nodei.co/npm/monument/)\n\n![build status](https://travis-ci.org/ansble/monument.svg?branch=master) ![david-dm](https://david-dm.org/ansble/monument.svg) [![npm version](https://badge.fury.io/js/monument.svg)](http://badge.fury.io/js/monument)\n\n## How To Get Started\n\n### Setting up routes\n\nThe easy way to do this is with the [monument-cli](https://github.com/ansble/monument-cli)and `yo monument-cli:routes` command. It takes your `routes.json` file and stubbs out all the route handlers and files for you.\n\nWhichever way you decide to do it the first step is to add your route to the `routes.json` file. It looks like this:\n\n```\n{\n\t"/": ["get"],\n\t"/sign-up": ["get", "post"],\n\t"/member/:username": ["get"]\n}\n```\n\nSo you have a key (the route) and then an array of allowed verbs for that route. This means that a request to a disallowed verb will not be handled. It returns a 404 just like a request to a route path does.\n\nYou are allowed to specify routes with params in them as demonstrated by the `/member/:username` route above. This means that when someone requests that route with something like `/member/designfrontier` there will be a variable named `username` included in the variable req.params (req.params.username will equal \'designfrontier\' in this example). You can use that variable in the event handler for the route. Oh yeah, that will be handled by the \'route:/member/:username:get\' event. Hopefully that makes sense.\n\nThe structure of a route event is: \'route:/path/to/resource:http-verb\'. So if you want to listen to those events for something, route handling, logging, jumping jack counter, whatever you just listen to the exposed emitter and you are good to go.\n\nThe route events recieve an object right now, often called connection, that looks like this\n\n```\n{\n\tres: response,\n\treq: request,\n\tparams: the url parameters as an object,\n\tquery: the queryparams as an object\n}\n```\n\nthese are the request and response objects from node. The other thing of interest are the other parts of the connection object, the params, and query objects. `params` contains the key/value pairs from the url params laid out with `:name` notation in the path. Lastly you get the `query` object which is the key/value pairs found in any queryparams on the path.\n\n#### put, post, update and parsing out body\n\nAt some point you are going to need to deal with body data from a form or ajax request. This is one of the areas where monument diverges from the mainstream you may be used to in server side js. We expose a parser function that you use like this in the event handler for the route you want:\n\n```\nvar parser = require(\'monument\').parser;\n\nevents.on(\'route:/join:post\', function (connection) {\n\t//parse out the request body\n\tparser(connection, function (body) {\n\t\tconsole.log(body);\n\t\tconnection.res.end(\'route /join now responding to post requests\');\n\t});\n});\n```\n\n`body` is the parsed body of the request and is passed into the callback function.\n\n### Data and Events\n\nMore to come... but think about the idea of resource pooling and individual data modules that front DSLs.\n\n### Static Assetts\n\nStatic assetts live in `/public` and can be organized in whatever way you see fit. All folders within public become routes on root. So, `/public/compnents` answers to requests on `/components` when the server is running. These static routes take precedent over evented routes and essentially prevent non-static route handling from happening on them. \n\nYou can interact with these routes through events to a certain degree. They raise a `static:served` with a payload of the file url that was served, when the file exists. If the file does not exist they raise a `static:missing` with the file url as payload. This will let you log and handle these conditions as needed.\n\n## Contributing\nContributing is simple :-)\n\nFeel free to edit away, just make sure that everything still passes its tests `npm test` and add new tests in `*_test.js` files. (For a file named merckx.js you would create a merckx_test.js file that contains the tests.) Once you have done that then open a pull request and we\'ll get it pulled in.\n\nWhen we do the next release your name will be added to the AUTHORS file... you know, because you\'re an author now.',
28 silly publish   readmeFilename: 'readme.md',
28 silly publish   gitHead: '125ea58c93b148f1fec35e0bdd8057b5899293a7',
28 silly publish   homepage: 'https://github.com/designfrontier/monumentjs',
28 silly publish   _id: 'monument@1.2.0',
28 silly publish   _shasum: '132e4ea025b7f01a2c1d18c6fb1e46c74c2d551c',
28 silly publish   _from: '.' }
29 verbose request where is /monument
30 verbose request registry http://registry.npmjs.org/
31 verbose request id ef620df2ba60fb66
32 verbose url raw /monument
33 verbose url resolving [ 'http://registry.npmjs.org/', './monument' ]
34 verbose url resolved http://registry.npmjs.org/monument
35 verbose request where is http://registry.npmjs.org/monument
36 info trying registry request attempt 1 at 06:30:03
37 http PUT http://registry.npmjs.org/monument
38 http 403 http://registry.npmjs.org/monument
39 verbose headers { server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
39 verbose headers   'content-type': 'application/json',
39 verbose headers   'cache-control': 'max-age=60',
39 verbose headers   'content-length': '8050',
39 verbose headers   'accept-ranges': 'bytes',
39 verbose headers   date: 'Thu, 29 Jan 2015 13:30:04 GMT',
39 verbose headers   via: '1.1 varnish',
39 verbose headers   connection: 'keep-alive',
39 verbose headers   'x-served-by': 'cache-lax1425-LAX',
39 verbose headers   'x-cache': 'MISS',
39 verbose headers   'x-cache-hits': '0',
39 verbose headers   'x-timer': 'S1422538203.805673,VS0,VE210' }
40 error publish Failed PUT 403
41 error Error: forbidden cannot modify pre-existing version: 1.2.0
41 error old={"name":"monument","version":"1.2.0","description":"evented routing for nodejs for use on the server and in the client. Isomorphic!","main":"app.js","scripts":{"start":"node app.js","test":"gulp test"},"repository":{"type":"git","url":"https://github.com/designfrontier/monumentjs"},"bugs":{"url":"https://github.com/designfrontier/monumentjs/issues"},"author":{"name":"Daniel Sellers","email":"daniel@designfrontier.net"},"license":"MIT","keywords":["nodejs","events","routing","isomorphic","browser","event","eda"],"dependencies":{"dot":"^1.0.3","media-typer":"^0.3.0","mime":"^1.2.11","raw-body":"^1.3.2"},"devDependencies":{"chai":"^1.10.0","chalk":"^0.5.1","gulp":"^3.8.10","gulp-mocha":"^2.0.0","minimist":"^1.1.0"},"contributors":[{"name":"Daniel Sellers","email":"daniel@designfrontier.net"}],"gitHead":"125ea58c93b148f1fec35e0bdd8057b5899293a7","homepage":"https://github.com/designfrontier/monumentjs","_id":"monument@1.2.0","_shasum":"132e4ea025b7f01a2c1d18c6fb1e46c74c2d551c","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"daniel_sellers","email":"daniel@designfrontier.net"},"maintainers":[{"name":"daniel_sellers","email":"daniel@designfrontier.net"}],"dist":{"shasum":"132e4ea025b7f01a2c1d18c6fb1e46c74c2d551c","tarball":"http://registry.npmjs.org/monument/-/monument-1.2.0.tgz"}}
41 error new={"name":"monument","version":"1.2.0","description":"evented routing for nodejs for use on the server and in the client. Isomorphic!","main":"app.js","scripts":{"start":"node app.js","test":"gulp test"},"repository":{"type":"git","url":"https://github.com/designfrontier/monumentjs"},"bugs":{"url":"https://github.com/designfrontier/monumentjs/issues"},"author":{"name":"Daniel Sellers","email":"daniel@designfrontier.net"},"license":"MIT","keywords":["nodejs","events","routing","isomorphic","browser","event","eda"],"dependencies":{"dot":"^1.0.3","media-typer":"^0.3.0","mime":"^1.2.11","raw-body":"^1.3.2"},"devDependencies":{"chai":"^1.10.0","chalk":"^0.5.1","gulp":"^3.8.10","gulp-mocha":"^2.0.0","minimist":"^1.1.0"},"contributors":[{"name":"Daniel Sellers","email":"daniel@designfrontier.net"}],"readme":"# monumentjs\u000a\u000a`monumentjs` is a super light event routed isomorphic nodejs framework. \u000a\u000a[![NPM](https://nodei.co/npm/monument.png)](https://nodei.co/npm/monument/)\u000a\u000a![build status](https://travis-ci.org/ansble/monument.svg?branch=master) ![david-dm](https://david-dm.org/ansble/monument.svg) [![npm version](https://badge.fury.io/js/monument.svg)](http://badge.fury.io/js/monument)\u000a\u000a## How To Get Started\u000a\u000a### Setting up routes\u000a\u000aThe easy way to do this is with the [monument-cli](https://github.com/ansble/monument-cli)and `yo monument-cli:routes` command. It takes your `routes.json` file and stubbs out all the route handlers and files for you.\u000a\u000aWhichever way you decide to do it the first step is to add your route to the `routes.json` file. It looks like this:\u000a\u000a```\u000a{\u000a\u0009\"/\": [\"get\"],\u000a\u0009\"/sign-up\": [\"get\", \"post\"],\u000a\u0009\"/member/:username\": [\"get\"]\u000a}\u000a```\u000a\u000aSo you have a key (the route) and then an array of allowed verbs for that route. This means that a request to a disallowed verb will not be handled. It returns a 404 just like a request to a route path does.\u000a\u000aYou are allowed to specify routes with params in them as demonstrated by the `/member/:username` route above. This means that when someone requests that route with something like `/member/designfrontier` there will be a variable named `username` included in the variable req.params (req.params.username will equal 'designfrontier' in this example). You can use that variable in the event handler for the route. Oh yeah, that will be handled by the 'route:/member/:username:get' event. Hopefully that makes sense.\u000a\u000aThe structure of a route event is: 'route:/path/to/resource:http-verb'. So if you want to listen to those events for something, route handling, logging, jumping jack counter, whatever you just listen to the exposed emitter and you are good to go.\u000a\u000aThe route events recieve an object right now, often called connection, that looks like this\u000a\u000a```\u000a{\u000a\u0009res: response,\u000a\u0009req: request,\u000a\u0009params: the url parameters as an object,\u000a\u0009query: the queryparams as an object\u000a}\u000a```\u000a\u000athese are the request and response objects from node. The other thing of interest are the other parts of the connection object, the params, and query objects. `params` contains the key/value pairs from the url params laid out with `:name` notation in the path. Lastly you get the `query` object which is the key/value pairs found in any queryparams on the path.\u000a\u000a#### put, post, update and parsing out body\u000a\u000aAt some point you are going to need to deal with body data from a form or ajax request. This is one of the areas where monument diverges from the mainstream you may be used to in server side js. We expose a parser function that you use like this in the event handler for the route you want:\u000a\u000a```\u000avar parser = require('monument').parser;\u000a\u000aevents.on('route:/join:post', function (connection) {\u000a\u0009//parse out the request body\u000a\u0009parser(connection, function (body) {\u000a\u0009\u0009console.log(body);\u000a\u0009\u0009connection.res.end('route /join now responding to post requests');\u000a\u0009});\u000a});\u000a```\u000a\u000a`body` is the parsed body of the request and is passed into the callback function.\u000a\u000a### Data and Events\u000a\u000aMore to come... but think about the idea of resource pooling and individual data modules that front DSLs.\u000a\u000a### Static Assetts\u000a\u000aStatic assetts live in `/public` and can be organized in whatever way you see fit. All folders within public become routes on root. So, `/public/compnents` answers to requests on `/components` when the server is running. These static routes take precedent over evented routes and essentially prevent non-static route handling from happening on them. \u000a\u000aYou can interact with these routes through events to a certain degree. They raise a `static:served` with a payload of the file url that was served, when the file exists. If the file does not exist they raise a `static:missing` with the file url as payload. This will let you log and handle these conditions as needed.\u000a\u000a## Contributing\u000aContributing is simple :-)\u000a\u000aFeel free to edit away, just make sure that everything still passes its tests `npm test` and add new tests in `*_test.js` files. (For a file named merckx.js you would create a merckx_test.js file that contains the tests.) Once you have done that then open a pull request and we'll get it pulled in.\u000a\u000aWhen we do the next release your name will be added to the AUTHORS file... you know, because you're an author now.","readmeFilename":"readme.md","gitHead":"125ea58c93b148f1fec35e0bdd8057b5899293a7","homepage":"https://github.com/designfrontier/monumentjs","_id":"monument@1.2.0","_shasum":"132e4ea025b7f01a2c1d18c6fb1e46c74c2d551c","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"daniel_sellers","email":"daniel@designfrontier.net"},"maintainers":[{"name":"daniel_sellers","email":"daniel@designfrontier.net"}],"dist":{"shasum":"132e4ea025b7f01a2c1d18c6fb1e46c74c2d551c","tarball":"http://registry.npmjs.org/monument/-/monument-1.2.0.tgz"}}: monument
41 error     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:308:14)
41 error     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:246:65)
41 error     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:236:22)
41 error     at Request.emit (events.js:98:17)
41 error     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1142:14)
41 error     at Request.emit (events.js:117:20)
41 error     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1096:12)
41 error     at IncomingMessage.emit (events.js:117:20)
41 error     at _stream_readable.js:944:16
41 error     at process._tickCallback (node.js:442:13)
42 error If you need help, you may report this *entire* log,
42 error including the npm and node versions, at:
42 error     <http://github.com/npm/npm/issues>
43 error System Darwin 14.0.0
44 error command "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
45 error cwd /Users/designfrontier/projects/monumentjs
46 error node -v v0.10.36
47 error npm -v 1.4.28
48 verbose exit [ 1, true ]
